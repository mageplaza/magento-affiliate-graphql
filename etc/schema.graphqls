type Query {
    MpAffiliateConfigs: Config @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Config") @doc(description: "The MpAffiliateConfigs query returns affiliate setting") @cache(cacheable: false)
    MpAffiliateSignupInformation: SignupInformation @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\SignupInformation") @doc(description: "The MpAffiliateSignupInformation query returns affiliate sign up information") @cache(cacheable: false)
    MpAffiliateCampaigns: [Campaign] @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Campaign") @doc(description: "The MpAffiliateCampaigns query returns affiliate campaign") @cache(cacheable: false)
}

type Customer {
    affiliate: AffiliateAction @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Affiliate\\AffiliateAction") @doc(description: "The Affiliate query returns affiliate information") @cache(cacheable: false)
}

type Mutation {
    MpAffiliateSignup(input: mpAffiliateSignupInput): String @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Mutation\\Signup") @doc(description:"Signup to affiliate")
    MpAffiliateInvite(input: mpAffiliateInviteInput!): String @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Mutation\\Invite") @doc(description:"Invite purchase")
    MpAffiliateCreateReferLink(input: mpAffiliateCreateReferLink!): String @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Mutation\\CreateReferLink") @doc(description:"Create refer link")
    MpAffiliateSubscribe(input: mpAffiliateSubscribeInput!): String @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Mutation\\Subscribe") @doc(description:"Affiliate Subscriptions")
    MpAffiliateWithdraw(input: mpAffiliateWithdrawInput!): String @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Mutation\\Withdraw") @doc(description:"Affiliate Withdraw")
    MpAffiliateCreateCoupon(input: mpAffiliateCreateCouponInput!): String @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Mutation\\CreateCoupon") @doc(description:"Affiliate Create Coupon")
    MpAffiliateApplyCoupon(input: mpAffiliateApplyInput!): String @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Mutation\\ApplyCoupon") @doc(description:"Affiliate Apply Coupon")
}

input mpAffiliateSignupInput {
    email: String
}

input mpAffiliateInviteInput {
    contacts: String!
    refer_url: String
    subject: String
    content: String
}

input mpAffiliateCreateReferLink {
    refer_url: String!
}

input mpAffiliateSubscribeInput {
    is_subscribe: Boolean!
}

input mpAffiliateWithdrawInput {
    amount: Float!
    withdraw_description: String
    payment_method: String!
    offline_address: String
    paypal_email: String
    banktranfer: String
}

input mpAffiliateCreateCouponInput {
    coupon_prefix: String!
}

input mpAffiliateApplyInput {
    cart_id: String!
    coupon: String!
}

type Config {
    general: GeneralConfig @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Config\\GeneralConfig") @doc(description: "Affiliate General Config")
    account: AccountConfig @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Config\\AccountConfig") @doc(description: "Affiliate Account Config")
    commission: CommissionConfig @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Config\\CommissionConfig") @doc(description: "Affiliate Commission Config")
    withdraw: WithdrawConfig @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Config\\WithdrawConfig") @doc(description: "Affiliate Withdraw Config")
    refer: ReferConfig @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Config\\ReferConfig") @doc(description: "Affiliate Refer Config")
}

type ReferConfig {
    enable: Boolean @doc(description: "Enable")
    account_sharing: String @doc(description: "Account Sharing")
    default_link: String @doc(description: "Default Link")
    sharing_content: SharingContent
}

type SharingContent {
    subject: String @doc(description: "Subject")
    email_content: String @doc(description: "Email Config")
}

type GeneralConfig {
    enabled: Boolean @doc(description: "Enabled")
    enable_banner: Boolean @doc(description: "Enabled Banner")
    expired_time: Int @doc(description: "Expired Time")
    overwrite_cookies: Boolean @doc(description: "Overwrite Cookies")
    use_code_as_coupon: Boolean @doc(description: "Use Code As Coupon")
    show_link: String @doc(description: "Show Link")
    page_welcome: String @doc(description: "Page Welcome")
    url_type: String @doc(description: "Url Type")
    url_prefix: String @doc(description: "Url Prefix")
    url_param: String @doc(description: "Url Param")
    url_code_length: String @doc(description: "Url Code Length")
}

type AccountConfig {
    sign_up_default_group: Int @doc(description: "Sign Up Default Group")
    sign_up_admin_approved: Int @doc(description: "Sign Up Admin Approved")
    sign_up_default_email_notification: Int @doc(description: "Sign Up Default Email Notification")
    term_conditions_enable: Boolean @doc(description: "Term & Conditions Enabled")
    term_conditions_checkbox_text: String @doc(description: "Term & Conditions Checkbox Text")
    term_conditions_title: String @doc(description: "Term & Conditions Title")
    term_conditions_html: String @doc(description: "Term & Conditions Html")
    term_conditions_default_checkbox: Boolean @doc(description: "Term & Conditions Default Checkbox")
    balance_limit: Float @doc(description: "Balance Limit")
    balance_negative: Boolean @doc(description: "Balance Negative")
}

type WithdrawConfig {
    allow_request: Boolean @doc(description: "Allow Request")
    payment_method: String @doc(description: "Payment Method")
    minimum_balance: Float @doc(description: "Minimum Balance")
    minimum: Float @doc(description: "Minimum")
    maximum: Float @doc(description: "Maximum")
}

type CommissionConfig {
    by_tax: Boolean @doc(description: "Received Commission By Tax")
    shipping: Boolean @doc(description: "Received Commission By Shipping")
    process: CommissionProcess @doc(description: "Return Commission Process Config")
}

type CommissionProcess {
    earn_commission_invoice: Boolean @doc(description: "Earn Commission After Invoice")
    holding_days: Int @doc(description: "Holding Days")
    refund: Boolean @doc(description: "Refund")
}

type SignupInformation {
    title: String @doc(description: "Term & Condition Title")
    cms_block: String @doc(description: "Term & Condition Content")
    is_checked: Int @doc(description: "Is checked by default")
    checkbox_text: String @doc(description: "The checkbox text")
}

type Campaign {
    campaign_id: Int @doc(description: "Campaign ID")
    name: String @doc(description: "Campaign Name")
    description: String @doc(description: "Campaign Description")
    status: Int @doc(description: "Campaign Status")
    website_ids: String @doc(description: "Campaign Website Ids")
    affiliate_group_ids: String @doc(description: "Affiliate Group Ids")
    from_date: String @doc(description: "From Date")
    to_date: String @doc(description: "To Date")
    display: Int @doc(description: "Display")
    sort_order: Int @doc(description: "Sort Order")
    conditions_serialized: String @doc(description: "Conditions")
    actions_serialized: String @doc(description: "Actions")
    commission: String @doc(description: "Commission")
    discount_action: String @doc(description: "Discount Action")
    discount_amount: Float @doc(description: "Discount Amount")
    discount_qty: Int @doc(description: "Discount Qty")
    discount_step: Int @doc(description: "Discount Step")
    discount_description: String @doc(description: "Discount Description")
    free_shipping: String @doc(description: "Free Shipping")
    apply_to_shipping: Int @doc(description: "Apply To Shipping")
    created_at: String @doc(description: "Created At")
    updated_at: String @doc(description: "Updated At")
    apply_discount_on_tax: Int @doc(description: "Apply Discount On Tax")
    code_length: Int @doc(description: "Code Length")
    code_format: String @doc(description: "Code Format")
    coupon_code: String @doc(description: "Coupon Code")
}

type AffiliateAction {
    Account: AccountData @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Affiliate\\Account") @doc(description: "The Account query returns affiliate information") @cache(cacheable: false)
    Transaction(
        filter: TransactionFilterInput
        pageSize: Int = 5
        currentPage: Int = 1
    ): TransactionOutput @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Affiliate\\Transaction") @doc(description: "The Transaction query returns affiliate transaction") @cache(cacheable: false)
    ReferInfo: ReferInfo @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Affiliate\\ReferInfo") @doc(description: "The ReferInfo query returns affiliate refer information") @cache(cacheable: false)
    WithdrawHistory(
        filter: WithdrawFilterInput
        pageSize: Int = 5
        currentPage: Int = 1
    ): WithdrawOutput @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Affiliate\\Withdraw") @doc(description: "The WithdrawHistory query returns affiliate withdraw history") @cache(cacheable: false)
    Banners(
        filter: BannersFilterInput
        pageSize: Int = 5
        currentPage: Int = 1
    ): BannersOutput @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Affiliate\\Banners") @doc(description: "The Banners query returns affiliate banners") @cache(cacheable: false)
}

input TransactionFilterInput {
    transaction_id: FilterTypeInput @doc(description: "Transaction Id")
    account_id: FilterTypeInput @doc(description: "Account Id")
    amount: FilterTypeInput @doc(description: "Amount")
    title: FilterTypeInput @doc(description: "Title")
    holding_to: FilterTypeInput @doc(description: "Holding To")
    customer_id: FilterTypeInput @doc(description: "Customer Id")
    action: FilterTypeInput @doc(description: "Action")
    type: FilterTypeInput @doc(description: "Type")
    amount_used: FilterTypeInput @doc(description: "Amount Used")
    current_balance: FilterTypeInput @doc(description: "Current Balance")
    status: FilterTypeInput @doc(description: "Status")
    order_id: FilterTypeInput @doc(description: "Order Id")
    order_increment_id: FilterTypeInput @doc(description: "Order Increment Id")
    store_id: FilterTypeInput @doc(description: "Store Id")
    campaign_id: FilterTypeInput @doc(description: "Campaign Id")
    created_at: FilterTypeInput @doc(description: "Create At")
    updated_at: FilterTypeInput @doc(description: "Updated At")
}

input WithdrawFilterInput {
    withdraw_id: FilterTypeInput @doc(description: "Withdraw Id")
    account_id: FilterTypeInput @doc(description: "Account Id")
    customer_id: FilterTypeInput @doc(description: "Customer Id")
    transaction_id: FilterTypeInput @doc(description: "Transaction Id")
    amount: FilterTypeInput @doc(description: "Amount")
    fee: FilterTypeInput @doc(description: "Fee")
    transfer_amount: FilterTypeInput @doc(description: "Transfer Amount")
    status: FilterTypeInput @doc(description: "Status")
    payment_method: FilterTypeInput @doc(description: "Payment Method")
    payment_details: FilterTypeInput @doc(description: "Payment Details")
    resolved_at: FilterTypeInput @doc(description: "Resolved At")
    created_at: FilterTypeInput @doc(description: "Created At")
    withdraw_description: FilterTypeInput @doc(description: "Withdraw Description")
    offline_address: FilterTypeInput @doc(description: "Offline Address")
    banktranfer: FilterTypeInput @doc(description: "Bank Transfer")
    paypal_email: FilterTypeInput @doc(description: "Paypal Email")
    paypal_transaction_id: FilterTypeInput @doc(description: "Paypal Transaction Id")
}

input BannersFilterInput {
    banner_id: FilterTypeInput @doc(description: "Banner Id")
    title: FilterTypeInput @doc(description: "Title")
    content: FilterTypeInput @doc(description: "Content")
    link: FilterTypeInput @doc(description: "Link")
    status: FilterTypeInput @doc(description: "Status")
    rel_nofollow: FilterTypeInput @doc(description: "Rel Nofollow")
    campaign_id: FilterTypeInput @doc(description: "Campaign Id")
    created_at: FilterTypeInput @doc(description: "Created At")
    updated_at: FilterTypeInput @doc(description: "Updated At")
}

type AccountData {
    account_id: Int @doc(description: "Account Id")
    customer_id: Int @doc(description: "Customer Id")
    code: String @doc(description: "Code")
    group_id: Int @doc(description: "Group Id")
    balance: Money @doc(description: "Balance")
    holding_balance: Money @doc(description: "Holding Balance")
    total_commission: Money @doc(description: "Total Commission")
    total_paid: Money @doc(description: "Total Paid")
    status: Int @doc(description: "Status")
    email_notification: Int @doc(description: "Email Notification")
    parent: String @doc(description: "Parent")
    tree: String @doc(description: "Tree")
    withdraw_method: String @doc(description: "Withdraw Method")
    withdraw_information: String @doc(description: "Withdraw Information")
    created_at: String @doc(description: "Created At")
    parent_email: String @doc(description: "Parent Email")
}

type TransactionOutput {
    total_count: Int @doc(description: "The total number of results returned when a query is applied"),
    items: [TransactionData] @doc(description: "Transaction data is satisfied")
}

type WithdrawOutput {
    total_count: Int @doc(description: "The total number of results returned when a query is applied"),
    items: [WithdrawData] @doc(description: "Withdraw data is satisfied")
}

type BannersOutput {
    total_count: Int @doc(description: "The total number of results returned when a query is applied"),
    items: [BannerData] @doc(description: "Banner data is satisfied")
}

type TransactionData {
    transaction_id: Int @doc(description: "Transaction Id")
    account_id: Int @doc(description: "Account Id")
    amount: Money @doc(description: "Amount")
    title: String @doc(description: "Title")
    holding_to: String @doc(description: "Holding To")
    customer_id: Int @doc(description: "Customer Id")
    action: String @doc(description: "Action")
    type: String @doc(description: "Type")
    amount_used: Money @doc(description: "Amount Used")
    current_balance: Money @doc(description: "Current Balance")
    status: Int @doc(description: "Status")
    order_id: Int @doc(description: "Order Id")
    order_increment_id: String @doc(description: "Order Increment Id")
    store_id: Int @doc(description: "Store Id")
    campaign_id: String @doc(description: "Campaign Id")
    created_at: String @doc(description: "Create At")
    updated_at: String @doc(description: "Updated At")
    extra_content: String @doc(description: "Extra Content")
}

type WithdrawData {
    withdraw_id: Int @doc(description: "Withdraw Id")
    account_id: Int @doc(description: "Account Id")
    customer_id: Int @doc(description: "Customer Id")
    transaction_id: Int @doc(description: "Transaction Id")
    amount: Money @doc(description: "Amount")
    fee: Money @doc(description: "Fee")
    transfer_amount: Money @doc(description: "Transfer Amount")
    status: Int @doc(description: "Status")
    payment_method: String @doc(description: "Payment Method")
    payment_details: String @doc(description: "Payment Details")
    resolved_at: String @doc(description: "Resolved At")
    created_at: String @doc(description: "Created At")
    withdraw_description: String @doc(description: "Withdraw Description")
    offline_address: String @doc(description: "Offline Address")
    banktranfer: String @doc(description: "Bank Transfer")
    paypal_email: String @doc(description: "Paypal Email")
    paypal_transaction_id: String @doc(description: "Paypal Transaction Id")
}

type BannerData {
    banner_id: Int @doc(description: "Banner Id")
    title: String @doc(description: "Title")
    content: String @doc(description: "Content")
    link: String @doc(description: "Link")
    status: Int @doc(description: "Status")
    rel_nofollow: Int @doc(description: "Rel Nofollow")
    campaign_id: Int @doc(description: "Campaign Id")
    created_at: String @doc(description: "Created At")
    updated_at: String @doc(description: "Updated At")
}

type ReferInfo {
    refer_url: String @doc(description: "Refer Url")
    refer_code: String @doc(description: "Refer Code")
    refer_email: String @doc(description: "Refer Email")
}

type CartPrices {
    segments: AffiliateQuoteSegments @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Cart") @doc(description: "Affiliate Segments")
}

type CustomerOrder {
    segments: AffiliateOrderSegments @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Order") @doc(description: "Affiliate Segments")
}

type AffiliateQuoteSegments {
    affiliate_key: String @doc(description: "Affiliate Key")
    affiliate_discount_amount: Float @doc(description: "Affiliate Discount")
    base_affiliate_discount_amount: Float @doc(description: "Base Affiliate Discount")
    affiliate_commission: String @doc(description: "Affiliate Commission")
    affiliate_shipping_commission: String @doc(description: "Affiliate Shipping Commission")
    affiliate_discount_shipping_amount: Float @doc(description: "Affiliate Discount Shipping Amount")
    base_affiliate_discount_shipping_amount: Float @doc(description: "Base Affiliate Discount Shipping Amount")
}

type AffiliateOrderSegments {
    affiliate_key: String @doc(description: "Affiliate Key")
    affiliate_commission: String @doc(description: "Affiliate Commission")
    affiliate_discount_amount: Float @doc(description: "Affiliate Discount")
    base_affiliate_discount_amount: Float @doc(description: "Base Affiliate Discount")
    affiliate_shipping_commission: String @doc(description: "Affiliate Shipping Commission")
    affiliate_earn_commission_invoice_after: String @doc(description: "Affiliate Earn Commission Invoice After")
    affiliate_discount_invoiced: Float @doc(description: "Affiliate Discount Invoiced")
    base_affiliate_discount_invoiced: Float @doc(description: "Base Affiliate Discount Invoiced")
    affiliate_discount_refunded: Float @doc(description: "Affiliate Discount Refunded")
    base_affiliate_discount_refunded: Float @doc(description: "Base Affiliate Discount Refunded")
    affiliate_commission_invoiced: String @doc(description: "Affiliate Commission Invoiced")
    affiliate_commission_refunded: String @doc(description: "Affiliate Commission Refunded")
    affiliate_discount_shipping_amount: Float @doc(description: "Affiliate Discount Shipping Amount")
    base_affiliate_discount_shipping_amount: Float @doc(description: "Base Affiliate Discount Shipping Amount")
}
