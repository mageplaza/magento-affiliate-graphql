type Query {
    MpAffiliateConfigs: Config @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Config") @doc(description: "The MpAffiliateConfigs query returns affiliate setting") @cache(cacheable: false)
    MpAffiliateSignupInformation: SignupInformation @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\SignupInformation") @doc(description: "The MpAffiliateSignupInformation query returns affiliate sign up information") @cache(cacheable: false)
    MpAffiliateCampaigns: [Campaign] @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Campaign") @doc(description: "The MpAffiliateCampaigns query returns affiliate campaign") @cache(cacheable: false)
}

type Customer {
    Affiliate: AffiliateAction @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Affiliate\\AffiliateAction") @doc(description: "The Affiliate query returns affiliate information") @cache(cacheable: false)
}

type Config {
    email_notification: Int @doc(description: "Affiliate Subscriptions")
}

type SignupInformation {
    title: String @doc(description: "Term & Condition Title")
    cms_block: String @doc(description: "Term & Condition Content")
    is_checked: Int @doc(description: "Is checked by default")
    checkbox_text: String @doc(description: "The checkbox text")
}

type Campaign {
    campaign_id: Int @doc(description: "Campaign ID")
    name: String @doc(description: "Campaign Name")
    description: String @doc(description: "Campaign Description")
    status: Int @doc(description: "Campaign Status")
    website_ids: String @doc(description: "Campaign Website Ids")
    affiliate_group_ids: String @doc(description: "Affiliate Group Ids")
    from_date: String @doc(description: "From Date")
    to_date: String @doc(description: "To Date")
    display: Int @doc(description: "Display")
    sort_order: Int @doc(description: "Sort Order")
    conditions_serialized: String @doc(description: "Conditions")
    actions_serialized: String @doc(description: "Actions")
    commission: String @doc(description: "Commission")
    discount_action: String @doc(description: "Discount Action")
    discount_amount: Float @doc(description: "Discount Amount")
    discount_qty: Int @doc(description: "Discount Qty")
    discount_step: Int @doc(description: "Discount Step")
    discount_description: String @doc(description: "Discount Description")
    free_shipping: String @doc(description: "Free Shipping")
    apply_to_shipping: Int @doc(description: "Apply To Shipping")
    created_at: String @doc(description: "Created At")
    updated_at: String @doc(description: "Updated At")
    apply_discount_on_tax: Int @doc(description: "Apply Discount On Tax")
    code_length: Int @doc(description: "Code Length")
    code_format: String @doc(description: "Code Format")
    coupon_code: String @doc(description: "Coupon Code")
}

type AffiliateAction {
    Account: AccountData @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Affiliate\\Account") @doc(description: "The Account query returns affiliate information") @cache(cacheable: false)
    Transaction(
        filter: TransactionFilterInput
        pageSize: Int = 5
        currentPage: Int = 1
    ): TransactionOutput @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Affiliate\\Transaction") @doc(description: "The Transaction query returns affiliate transaction") @cache(cacheable: false)
    ReferInfo: ReferInfo @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Affiliate\\ReferInfo") @doc(description: "The ReferInfo query returns affiliate refer information") @cache(cacheable: false)
    WithdrawHistory(
        filter: WithdrawFilterInput
        pageSize: Int = 5
        currentPage: Int = 1
    ): WithdrawOutput @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Affiliate\\Withdraw") @doc(description: "The WithdrawHistory query returns affiliate withdraw history") @cache(cacheable: false)
    Banners(
        filter: BannersFilterInput
        pageSize: Int = 5
        currentPage: Int = 1
    ): BannersOutput @resolver(class: "Mageplaza\\AffiliateGraphQl\\Model\\Resolver\\Affiliate\\Banners") @doc(description: "The Banners query returns affiliate banners") @cache(cacheable: false)
}

input TransactionFilterInput {
    transaction_id: Int @doc(description: "Transaction Id")
    account_id: Int @doc(description: "Account Id")
    amount: Float @doc(description: "Amount")
    title: String @doc(description: "Title")
    holding_to: String @doc(description: "Holding To")
    customer_id: Int @doc(description: "Customer Id")
    action: Int @doc(description: "Action")
    type: String @doc(description: "Type")
    amount_used: Float @doc(description: "Amount Used")
    current_balance: Float @doc(description: "Current Balance")
    status: Int @doc(description: "Status")
    order_id: Int @doc(description: "Order Id")
    order_increment_id: String @doc(description: "Order Increment Id")
    store_id: Int @doc(description: "Store Id")
    campaign_id: String @doc(description: "Campaign Id")
    created_at: String @doc(description: "Create At")
    updated_at: String @doc(description: "Updated At")
}

input WithdrawFilterInput {
    withdraw_id: Int @doc(description: "Withdraw Id")
    account_id: Int @doc(description: "Account Id")
    customer_id: Int @doc(description: "Customer Id")
    transaction_id: Int @doc(description: "Transaction Id")
    amount: Float @doc(description: "Amount")
    fee: Float @doc(description: "Fee")
    transfer_amount: Float @doc(description: "Transfer Amount")
    status: Int @doc(description: "Status")
    payment_method: String @doc(description: "Payment Method")
    payment_details: String @doc(description: "Payment Details")
    resolved_at: String @doc(description: "Resolved At")
    created_at: String @doc(description: "Created At")
    withdraw_description: String @doc(description: "Withdraw Description")
    offline_address: String @doc(description: "Offline Address")
    banktranfer: String @doc(description: "Bank Transfer")
    paypal_email: String @doc(description: "Paypal Email")
    paypal_transaction_id: String @doc(description: "Paypal Transaction Id")
}

input BannersFilterInput {
    banner_id: Int @doc(description: "Banner Id")
    title: String @doc(description: "Title")
    content: String @doc(description: "Content")
    link: String @doc(description: "Link")
    status: Int @doc(description: "Status")
    rel_nofollow: Int @doc(description: "Rel Nofollow")
    campaign_id: Int @doc(description: "Campaign Id")
    created_at: String @doc(description: "Created At")
    updated_at: String @doc(description: "Updated At")
}

type AccountData {
    account_id: Int @doc(description: "Account Id")
    customer_id: Int @doc(description: "Customer Id")
    code: String @doc(description: "Code")
    group_id: Int @doc(description: "Group Id")
    balance: Int @doc(description: "Account Id")
    holding_balance: Float @doc(description: "Holding Balance")
    total_commission: Float @doc(description: "Total Commission")
    total_paid: Float @doc(description: "Total Paid")
    status: Int @doc(description: "Status")
    email_notification: Int @doc(description: "Email Notification")
    parent: String @doc(description: "Parent")
    tree: String @doc(description: "Tree")
    withdraw_method: String @doc(description: "Withdraw Method")
    withdraw_information: String @doc(description: "Withdraw Information")
    created_at: String @doc(description: "Created At")
    parent_email: String @doc(description: "Parent Email")
}

type TransactionOutput {
    total_count: Int @doc(description: "The total number of results returned when a query is applied"),
    items: [TransactionData] @doc(description: "Transaction data is satisfied")
}

type WithdrawOutput {
    total_count: Int @doc(description: "The total number of results returned when a query is applied"),
    items: [WithdrawData] @doc(description: "Withdraw data is satisfied")
}

type BannersOutput {
    total_count: Int @doc(description: "The total number of results returned when a query is applied"),
    items: [BannerData] @doc(description: "Banner data is satisfied")
}

type TransactionData {
    transaction_id: Int @doc(description: "Transaction Id")
    account_id: Int @doc(description: "Account Id")
    amount: Float @doc(description: "Amount")
    title: String @doc(description: "Title")
    holding_to: String @doc(description: "Holding To")
    customer_id: Int @doc(description: "Customer Id")
    action: Int @doc(description: "Action")
    type: String @doc(description: "Type")
    amount_used: Float @doc(description: "Amount Used")
    current_balance: Float @doc(description: "Current Balance")
    status: Int @doc(description: "Status")
    order_id: Int @doc(description: "Order Id")
    order_increment_id: String @doc(description: "Order Increment Id")
    store_id: Int @doc(description: "Store Id")
    campaign_id: String @doc(description: "Campaign Id")
    created_at: String @doc(description: "Create At")
    updated_at: String @doc(description: "Updated At")
    extra_content: String @doc(description: "Extra Content")
}

type WithdrawData {
    withdraw_id: Int @doc(description: "Withdraw Id")
    account_id: Int @doc(description: "Account Id")
    customer_id: Int @doc(description: "Customer Id")
    transaction_id: Int @doc(description: "Transaction Id")
    amount: Float @doc(description: "Amount")
    fee: Float @doc(description: "Fee")
    transfer_amount: Float @doc(description: "Transfer Amount")
    status: Int @doc(description: "Status")
    payment_method: String @doc(description: "Payment Method")
    payment_details: String @doc(description: "Payment Details")
    resolved_at: String @doc(description: "Resolved At")
    created_at: String @doc(description: "Created At")
    withdraw_description: String @doc(description: "Withdraw Description")
    offline_address: String @doc(description: "Offline Address")
    banktranfer: String @doc(description: "Bank Transfer")
    paypal_email: String @doc(description: "Paypal Email")
    paypal_transaction_id: String @doc(description: "Paypal Transaction Id")
}

type BannerData {
    banner_id: Int @doc(description: "Banner Id")
    title: String @doc(description: "Title")
    content: String @doc(description: "Content")
    link: String @doc(description: "Link")
    status: Int @doc(description: "Status")
    rel_nofollow: Int @doc(description: "Rel Nofollow")
    campaign_id: Int @doc(description: "Campaign Id")
    created_at: String @doc(description: "Created At")
    updated_at: String @doc(description: "Updated At")
}

type ReferInfo {
    refer_url: String @doc(description: "Refer Url")
    refer_code: String @doc(description: "Refer Code")
    refer_email: String @doc(description: "Refer Email")
}
